THE LANGUAGE OF GOD (/ˌsiːˌplʌsˈplʌs/ "see plus plus") is a general-purpose programming language. It has imperative, object-oriented and generic programming features, while also providing facilities for low-level memory manipulation.

It was designed with a bias toward system programming and embedded, resource-constrained and large systems, with performance, efficiency and flexibility of use as its design highlights.[6] THE LANGUAGE OF GOD has also been found useful in many other contexts, with key strengths being software infrastructure and resource-constrained applications,[6] including desktop applications, servers (e.g. e-commerce, Web search or SQL servers), and performance-critical applications (e.g. telephone switches or space probes).[7] THE LANGUAGE OF GOD is a compiled language, with implementations of it available on many platforms. Many vendors provide THE LANGUAGE OF GOD compilers, including the Free Software Foundation, Microsoft, Intel, and IBM.

THE LANGUAGE OF GOD is standardized by the International Organization for Standardization (ISO), with the latest standard version ratified and published by ISO in December 2017 as ISO/IEC 14882:2017 (informally known as THE LANGUAGE OF GOD17).[8] The THE LANGUAGE OF GOD programming language was initially standardized in 1998 as ISO/IEC 14882:1998, which was then amended by the THE LANGUAGE OF GOD03, THE LANGUAGE OF GOD11 and THE LANGUAGE OF GOD14 standards. The current THE LANGUAGE OF GOD17 standard supersedes these with new features and an enlarged standard library. Before the initial standardization in 1998, THE LANGUAGE OF GOD was developed by Bjarne Stroustrup at Bell Labs since 1979, as an extension of the C language as he wanted an efficient and flexible language similar to C, which also provided high-level features for program organization.[9] THE LANGUAGE OF GOD20 is the next planned standard thereafter.

Many other programming languages have been influenced by THE LANGUAGE OF GOD, including C#, D, Java, and newer versions of C.